/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Insets;
import java.awt.geom.RoundRectangle2D;
import javax.swing.JLabel;
import javax.swing.JProgressBar;
import javax.swing.border.Border;

/**
 *
 * @author F776
 */
public class LoadingScreen extends javax.swing.JFrame {

    private static LoadingScreen instance;

    /**
     * Creates new form LoadingScreen
     */
    public LoadingScreen() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    public static JProgressBar getProgressBar() {
        return LoadingScreen.pgbLoading;
    }

    public static JLabel getProgressLabel() {
        return LoadingScreen.lblProgressText;
    }

    public static LoadingScreen getLoadingScreen() {
        if (LoadingScreen.instance == null) {
            LoadingScreen.instance = new LoadingScreen();
        }
        return LoadingScreen.instance;
    }

    public static void disposeFrame() {
        LoadingScreen.instance.dispose();
    }

    private static class RoundedBorder implements Border {

        private final int radius;
        private final Color color;

        public RoundedBorder(int radius, Color color) {
            this.radius = radius;
            this.color = color;
        }

        @Override
        public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
            Graphics2D g2d = (Graphics2D) g;
            g2d.setColor(color);

            // Draw rounded rectangle border
            g2d.draw(new RoundRectangle2D.Double(x, y, width - 1, height - 1, radius, radius));
        }

        @Override
        public Insets getBorderInsets(Component c) {
            return new Insets(radius, radius, radius, radius);
        }

        @Override
        public boolean isBorderOpaque() {
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblProgressText = new javax.swing.JLabel();
        pgbLoading = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Loading...");
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(300, 100));
        getContentPane().setLayout(new java.awt.GridLayout(2, 1));

        lblProgressText.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        lblProgressText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProgressText.setText("Loading...");
        lblProgressText.setPreferredSize(new java.awt.Dimension(300, 100));
        lblProgressText.setRequestFocusEnabled(false);
        getContentPane().add(lblProgressText);

        pgbLoading.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        pgbLoading.setBorder(new RoundedBorder(15, new Color(29, 148, 224)));
        pgbLoading.setBorderPainted(false);
        pgbLoading.setPreferredSize(new java.awt.Dimension(300, 100));
        pgbLoading.setStringPainted(true);
        getContentPane().add(pgbLoading);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel lblProgressText;
    private static javax.swing.JProgressBar pgbLoading;
    // End of variables declaration//GEN-END:variables
}
